<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.kh.team.mappers.group">
	<select id="getNextGno" resultType="int">
		select seq_group_gno.nextval from dual 
	</select>

<!-- 그룹 생성 -->
	<insert id="insertGroup">
		insert into tbl_group(gno, g_name, excercise_type, g_attend, g_intro, g_pic, g_leader, dno, sno, sgno)
			values(#{gno}, #{g_name}, #{excercise_type}, #{g_attend},#{g_intro}, #{g_pic, jdbcType=VARCHAR}, 
				#{g_leader}, #{dno}, #{sno, jdbcType=VARCHAR}, #{sgno, jdbcType=VARCHAR})
	</insert>

<!-- 그룹 리스트	 -->
<!-- 전체 그룹 리스트  -->
	<select id="selectGroup" resultType="GroupVo">
		 select * from tbl_group order by gno desc
	</select>
	
<!-- 	관리자가 보는 그룹리스트 -->
	<select id="adminGroupList" resultType="GroupVo">
		select * from (select rownum rnum, a.* from
			(select * from tbl_group 
				where (gno || g_name || excercise_type || g_leader || dno) like '%' || #{keyword, jdbcType=VARCHAR} || '%'
			order by gno desc) a)
		where rnum between #{startRow} and #{endRow}
	</select>
	
	<select id="selectGroupList" resultType="GroupVo">
		select * from (select rownum rnum, a.* from 
			(select * from tbl_group
			order by g_regdate desc, gno desc) a) 
		where rnum between #{startRow} and #{endRow}
	</select>
	
	<select id="groupLocation" resultType="LocationVo">
		select * from tbl_group_location where sno is null and sgno is null
	</select>
	
	<select id="groupLocationSno" resultType="LocationVo">
		select * from tbl_group_location where sno is not null and sgno is null and dno = #{dno}
	</select>
	
	<select id="groupLocationSgno" resultType="LocationVo">
		select * from tbl_group_location where sgno is not null and dno = #{dno} and sno = #{sno}
	</select>
	
<!-- 	전체 그룹 갯수 -->
	<select id="getCount" resultType="int">
		select count(*) from tbl_group
		where (gno || g_name || excercise_type || g_leader || dno) like '%' || #{keyword, jdbcType=VARCHAR} || '%'
	</select>
	
<!-- 그룹 상세보기 -->
	<select id="groupByGno" resultType="GroupVo">
		select * from tbl_group where gno = #{gno}
	</select>
	
<!-- 그룹 수정 -->
	<update id="updateGroup">
		update tbl_group set g_name = #{g_name}, excercise_type = #{excercise_type}, g_attend = #{g_attend},
				g_intro = #{g_intro}, g_pic = #{g_pic, jdbcType=VARCHAR}, dno = #{dno}, sno = #{sno, jdbcType=VARCHAR}, 
					sgno = #{sgno, jdbcType=VARCHAR}
			where gno = #{gno}
	</update>

<!-- 그룹 가입	 -->
	<insert id="insertJoinGroup">
		insert into tbl_group_join(jno, gno, userid, nickname)
			values(seq_group_jno.nextval, #{gno}, #{userid}, #{nickname})
	</insert>
	
	
	<update id="updateGroupMember">
		update tbl_group set g_present = g_present + #{cnt} where gno = #{gno}
	</update>

<!-- 그룹 탈퇴 -->
	<delete id="deleteJoinGroup">
		delete from tbl_group_join
		where gno = #{gno}
		and userid = #{userid}
	</delete>
	
<!-- 그룹 삭제 -->
	<delete id="deleteGroup">
		delete from tbl_group where gno = #{gno}
	</delete>
	
	<delete id="deleteGroupBoard">
		delete from tbl_group_board where gno = #{gno}
	</delete>
	
	<delete id="deleteGroupComment">
		delete from tbl_group_board_comment where gno = #{gno}
	</delete>
	
	<delete id="deleteGroupLike">
		delete from tbl_group_board_like where gno = #{gno}
	</delete>
	
	<delete id="deleteGroupReport">
		delete from tbl_report where gno = #{gno}
	</delete>
	<delete id="deleteGroupCalendar">
		delete from tbl_group_calendar where gno = #{gno}
	</delete>
	
	<!-- 그룹별 멤버 가져오기 -->
	<select id="getGroupMember" resultType="GroupJoinVo">
		select * from tbl_group_join
		where gno = #{gno}
	</select>
	
	<!-- 가입한 그룹 목록 가져오기 -->
	<select id="getGroupById" resultType="GroupVo">
		select * from tbl_group
		where gno in (select gno from tbl_group_join
		where userid = #{userid})
	</select>
	
	<select id="groupListOrder" resultType="GroupVo">
		select * from tbl_group
		order by g_attend - g_present
	</select>
	
	
<!-- 	가입한 그룹 회원 닉네임 가져오기 -->
	<select id="getNickname" resultType="String">
		select nickname from tbl_user 
		where userid 
		in (select userid from tbl_group_join where gno = #{gno})
		order by nickname
	</select>
	
	<select id="groupByLocation" resultType="GroupVo">
		select * from (select * from tbl_group
            where not g_attend = g_present
            order by g_attend - g_present)
		where dno = #{dno} and rownum &lt;= 3
	</select>
	
	<select id="searchLocation" resultType="GroupVo">
		select * from (select rownum rnum, a.* from 
			(select * from tbl_group
			<choose>
				<when test="dno != 0 and sno == 0 and sgno == 0">
					where dno = #{dno, jdbcType=VARCHAR}
				</when>
				<when test="dno != 0 and sno != 0 and sgno == 0">
					where dno = #{dno, jdbcType=VARCHAR} and sno = #{sno, jdbcType=VARCHAR}	
				</when>
				<when test="dno != 0 and sno != 0 and sgno != 0">
					where dno = #{dno, jdbcType=VARCHAR} and sno = #{sno, jdbcType=VARCHAR} and sgno = #{sgno, jdbcType=VARCHAR}	
				</when>
				<otherwise>
				</otherwise>
			</choose>
			) a) 
		where rnum between #{startRow} and #{endRow}
	</select>
	
<!-- 	회원이 가입한 그룹정보 가져오기 -->
	<select id="getGroupByUserId" resultType="GroupVo">
		select * from tbl_group
			where gno
		in (select gno from tbl_group_join where userid = #{userid})
	</select>
	
	<select id="isExistMyGroupList" resultType="int">
		select count(*) from tbl_group_join
		where userid = #{userid}
	</select>
</mapper>
